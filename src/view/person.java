/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.toedter.calendar.JDateChooser;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.patient_mod;
import models.person_mod;
import models.query;

/**
 *
 * @author hima1993
 */
public class person extends javax.swing.JFrame {
    String currentpass =null;
    /**
     * Creates new form person
     */
    public person() {
        initComponents();
    }
    public person(String pass){
        System.out.println(pass);
    currentpass = pass;
    initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        person_panel = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        p_lname = new javax.swing.JTextField();
        p_id = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        p_fname = new javax.swing.JTextField();
        p_contact = new javax.swing.JTextField();
        p_bld = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        p_nic = new javax.swing.JTextField();
        p_addr1 = new javax.swing.JTextField();
        p_addr2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        p_grd_fname = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        p_grd_lname = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        p_grd_contact = new javax.swing.JTextField();
        p_dob = new com.toedter.calendar.JDateChooser();
        p_gen = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        e_id = new javax.swing.JTextField();
        e_fname = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        e_lname = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        e_nic = new javax.swing.JTextField();
        e_bld = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        e_addr1 = new javax.swing.JTextField();
        e_addr22 = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        e_contact = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        e_wrd_name = new javax.swing.JTextField();
        e_jobtype = new javax.swing.JComboBox<>();
        jLabel49 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        e_usrname = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        e_pin = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        e_passwrd2 = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        e_dob = new com.toedter.calendar.JDateChooser();
        appt_date = new com.toedter.calendar.JDateChooser();
        e_gen = new javax.swing.JComboBox<>();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        ext_id = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        ext_fname = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        ext_hospital = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        ext_nic = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        ext_addr1 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        ext_addr2 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        ext_contact = new javax.swing.JTextField();
        ext_bld = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        ext_lname = new javax.swing.JTextField();
        dd = new javax.swing.JLabel();
        ext_dob = new com.toedter.calendar.JDateChooser();
        jLabel28 = new javax.swing.JLabel();
        ext_gen = new javax.swing.JComboBox<>();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        person_clr = new javax.swing.JButton();
        person_srch = new javax.swing.JButton();
        person_update = new javax.swing.JButton();
        person_delete = new javax.swing.JButton();
        jLabel54 = new javax.swing.JLabel();
        person_main = new javax.swing.JButton();
        person_submit = new javax.swing.JButton();
        viewall = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Person Management ");
        setBackground(java.awt.SystemColor.inactiveCaption);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel4.setText("Patient Surname");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 90, 20));

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel5.setText("Date Of Birth");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 80, 20));

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel6.setText("Patient Initials");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 80, 20));
        jPanel1.add(p_lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 120, 30));

        p_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                p_idKeyPressed(evt);
            }
        });
        jPanel1.add(p_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 70, 30));

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel7.setText("Patient ID ");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 60, 20));

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel8.setText("Gender");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 60, 20));

        jLabel9.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel9.setText("NIC");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 60, 20));

        jLabel10.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel10.setText("Contact No");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 310, 100, 20));
        jPanel1.add(p_fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 120, 30));

        p_contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_contactActionPerformed(evt);
            }
        });
        p_contact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                p_contactKeyPressed(evt);
            }
        });
        jPanel1.add(p_contact, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 310, 120, 30));

        p_bld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_bldActionPerformed(evt);
            }
        });
        p_bld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                p_bldKeyPressed(evt);
            }
        });
        jPanel1.add(p_bld, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 40, 30));

        jLabel11.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel11.setText("Blood Group");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 80, 20));

        jLabel13.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel13.setText("Address Line 1");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 230, 100, 20));

        jLabel14.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel14.setText("Address Line 2");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 270, 90, 20));

        p_nic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_nicActionPerformed(evt);
            }
        });
        jPanel1.add(p_nic, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 120, 30));

        p_addr1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_addr1ActionPerformed(evt);
            }
        });
        jPanel1.add(p_addr1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 230, 120, 30));

        p_addr2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_addr2ActionPerformed(evt);
            }
        });
        jPanel1.add(p_addr2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 270, 120, 30));

        jLabel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contact Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 1, 14), new java.awt.Color(0, 51, 255))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 170, 290, 180));

        jLabel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Patient", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 1, 14), new java.awt.Color(0, 51, 255))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 250, 150));

        jLabel53.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/pictures/patient (2).png"))); // NOI18N
        jPanel1.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 10, -1, -1));

        jLabel46.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel46.setText("Gurdian Initials");
        jPanel1.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 40, 120, 20));

        p_grd_fname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_grd_fnameActionPerformed(evt);
            }
        });
        jPanel1.add(p_grd_fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 40, 120, 30));

        jLabel58.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel58.setText("Gurdian Surname");
        jPanel1.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, 100, 20));

        p_grd_lname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_grd_lnameActionPerformed(evt);
            }
        });
        jPanel1.add(p_grd_lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 80, 120, 30));

        jLabel59.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel59.setText("Gurdian Contact No");
        jPanel1.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, 120, 30));

        p_grd_contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_grd_contactActionPerformed(evt);
            }
        });
        p_grd_contact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                p_grd_contactKeyPressed(evt);
            }
        });
        jPanel1.add(p_grd_contact, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 120, 120, 30));

        p_dob.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                p_dobKeyPressed(evt);
            }
        });
        jPanel1.add(p_dob, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 310, 120, 30));

        p_gen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        jPanel1.add(p_gen, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, 90, 30));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 0, 0));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("*");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 120, 30, 30));

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(204, 0, 0));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("*");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, 30, 30));

        jLabel44.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(204, 0, 0));
        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel44.setText("*");
        jPanel1.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 310, 30, 30));

        jLabel60.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(204, 0, 0));
        jLabel60.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel60.setText("*");
        jPanel1.add(jLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 310, 30, 30));

        jLabel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "General Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 1, 14), new java.awt.Color(0, 51, 255))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 250, 180));

        jLabel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gurdian Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 1, 14), new java.awt.Color(0, 51, 255))); // NOI18N
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, 270, 150));

        person_panel.addTab("Patient", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel30.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel30.setText("Employee ID ");
        jPanel2.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 90, 20));

        e_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_idActionPerformed(evt);
            }
        });
        e_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                e_idKeyPressed(evt);
            }
        });
        jPanel2.add(e_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 70, 30));
        jPanel2.add(e_fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 120, 30));

        jLabel31.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel31.setText("Employee Initials");
        jPanel2.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 100, 20));

        jLabel32.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel32.setText("Employee Surname");
        jPanel2.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 110, 20));
        jPanel2.add(e_lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 120, 30));

        jLabel33.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel33.setText("Gender");
        jPanel2.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 60, 20));

        jLabel35.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel35.setText("NIC");
        jPanel2.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 60, 20));

        e_nic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_nicActionPerformed(evt);
            }
        });
        jPanel2.add(e_nic, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 120, 30));

        e_bld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_bldActionPerformed(evt);
            }
        });
        e_bld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                e_bldKeyPressed(evt);
            }
        });
        jPanel2.add(e_bld, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 310, 40, 30));

        jLabel36.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel36.setText("Blood Group");
        jPanel2.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 80, 20));

        jLabel37.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel37.setText("Date Of Birth");
        jPanel2.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 80, 20));

        jLabel38.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel38.setText("Appointment Date ");
        jPanel2.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 130, -1, 20));

        jLabel40.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel40.setText("Address Line 1");
        jPanel2.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 260, 100, 20));

        jLabel41.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel41.setText("Address Line 2");
        jPanel2.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, 110, 20));

        e_addr1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_addr1ActionPerformed(evt);
            }
        });
        jPanel2.add(e_addr1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 270, 120, 30));

        e_addr22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_addr22ActionPerformed(evt);
            }
        });
        jPanel2.add(e_addr22, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 310, 120, 30));

        jLabel42.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel42.setText("Contact No");
        jPanel2.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 350, 120, 20));

        e_contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_contactActionPerformed(evt);
            }
        });
        e_contact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                e_contactKeyPressed(evt);
            }
        });
        jPanel2.add(e_contact, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 350, 120, 30));

        jLabel45.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel45.setText("Job Type");
        jPanel2.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, 80, 20));

        jLabel47.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel47.setText("Ward Name");
        jPanel2.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 90, 80, 20));

        e_wrd_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_wrd_nameActionPerformed(evt);
            }
        });
        e_wrd_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                e_wrd_nameKeyPressed(evt);
            }
        });
        jPanel2.add(e_wrd_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 80, 90, 30));

        e_jobtype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Doctor", "Consultant Doctor", "Nurse", "Maintenance Staff" }));
        e_jobtype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_jobtypeActionPerformed(evt);
            }
        });
        jPanel2.add(e_jobtype, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 30, 120, 30));

        jLabel49.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Employee", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 1, 14), new java.awt.Color(0, 51, 255))); // NOI18N
        jPanel2.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 250, 180));

        jLabel51.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel51.setText("User Name");
        jPanel2.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 240, 80, 20));

        e_usrname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_usrnameActionPerformed(evt);
            }
        });
        jPanel2.add(e_usrname, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 240, 120, 30));

        jLabel43.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/pictures/doctor.png"))); // NOI18N
        jPanel2.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 0, -1, -1));

        e_pin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_pinActionPerformed(evt);
            }
        });
        jPanel2.add(e_pin, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 330, 120, 30));

        jLabel56.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel56.setText("Pin");
        jPanel2.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 330, 80, 20));

        jLabel48.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Login Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 1, 14), new java.awt.Color(0, 51, 255))); // NOI18N
        jPanel2.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 210, 220, 180));

        e_passwrd2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_passwrd2ActionPerformed(evt);
            }
        });
        jPanel2.add(e_passwrd2, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 290, 120, 30));

        jLabel57.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel57.setText("Password");
        jPanel2.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 290, 80, 20));
        jPanel2.add(e_dob, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 130, 120, 30));
        jPanel2.add(appt_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 350, 120, 30));

        e_gen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        e_gen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_genActionPerformed(evt);
            }
        });
        jPanel2.add(e_gen, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 90, 30));

        jLabel61.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(204, 0, 0));
        jLabel61.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel61.setText("*");
        jPanel2.add(jLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 350, 30, 30));

        jLabel62.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel62.setForeground(new java.awt.Color(204, 0, 0));
        jLabel62.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel62.setText("*");
        jPanel2.add(jLabel62, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 80, 30, 30));

        jLabel63.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(204, 0, 0));
        jLabel63.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel63.setText("*");
        jPanel2.add(jLabel63, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 330, 30, 30));

        jLabel34.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "General Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 1, 14), new java.awt.Color(0, 51, 255))); // NOI18N
        jPanel2.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 250, 180));

        jLabel64.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(204, 0, 0));
        jLabel64.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel64.setText("*");
        jPanel2.add(jLabel64, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 130, 30, 30));

        jLabel65.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel65.setForeground(new java.awt.Color(204, 0, 0));
        jLabel65.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel65.setText("*");
        jPanel2.add(jLabel65, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 350, 30, 30));

        jLabel66.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(204, 0, 0));
        jLabel66.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel66.setText("*");
        jPanel2.add(jLabel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 350, 30, 30));

        jLabel39.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contact Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 1, 14), new java.awt.Color(0, 51, 255))); // NOI18N
        jPanel2.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, 280, 180));

        jLabel29.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Employee Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 1, 14), new java.awt.Color(0, 51, 255))); // NOI18N
        jPanel2.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, 280, 180));

        person_panel.addTab("Employee", jPanel2);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ext_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ext_idActionPerformed(evt);
            }
        });
        ext_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ext_idKeyPressed(evt);
            }
        });
        jPanel3.add(ext_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 70, 30));

        jLabel16.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel16.setText("Physician ID ");
        jPanel3.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 90, 20));

        jLabel17.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel17.setText("Physician Initials");
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 100, 20));
        jPanel3.add(ext_fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 120, 30));

        jLabel18.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel18.setText("Hospital");
        jPanel3.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 110, 20));
        jPanel3.add(ext_hospital, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 160, 120, 30));

        jLabel19.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel19.setText("Gender");
        jPanel3.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 60, 20));

        ext_nic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ext_nicActionPerformed(evt);
            }
        });
        jPanel3.add(ext_nic, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 270, 120, 30));

        jLabel20.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel20.setText("NIC");
        jPanel3.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 60, 20));

        ext_addr1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ext_addr1ActionPerformed(evt);
            }
        });
        jPanel3.add(ext_addr1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 270, 120, 30));

        jLabel22.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel22.setText("Address Line 1");
        jPanel3.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 260, 100, 20));

        jLabel23.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel23.setText("Address Line 2");
        jPanel3.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, 110, 20));

        ext_addr2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ext_addr2ActionPerformed(evt);
            }
        });
        jPanel3.add(ext_addr2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 310, 120, 30));

        jLabel24.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel24.setText(" Contact No");
        jPanel3.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 350, 120, 20));

        ext_contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ext_contactActionPerformed(evt);
            }
        });
        ext_contact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ext_contactKeyPressed(evt);
            }
        });
        jPanel3.add(ext_contact, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 350, 120, 30));

        ext_bld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ext_bldActionPerformed(evt);
            }
        });
        jPanel3.add(ext_bld, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 310, 40, 30));

        jLabel25.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel25.setText("Blood Group");
        jPanel3.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 80, 20));

        jLabel27.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel27.setText("Date Of Birth");
        jPanel3.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 80, 20));

        jLabel52.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/pictures/dental-surgeon-darlington (1).png"))); // NOI18N
        jPanel3.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, -1, -1));

        jLabel55.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel55.setText("Physician Surname");
        jPanel3.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 110, 20));
        jPanel3.add(ext_lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 120, 30));

        dd.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "External Physician", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 1, 14), new java.awt.Color(0, 51, 255))); // NOI18N
        jPanel3.add(dd, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 250, 200));
        jPanel3.add(ext_dob, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 350, 130, 30));

        jLabel28.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contact Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 1, 14), new java.awt.Color(0, 51, 255))); // NOI18N
        jPanel3.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, 280, 180));

        ext_gen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        jPanel3.add(ext_gen, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, 90, 30));

        jLabel67.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel67.setForeground(new java.awt.Color(204, 0, 0));
        jLabel67.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel67.setText("*");
        jPanel3.add(jLabel67, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 350, 30, 30));

        jLabel68.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel68.setForeground(new java.awt.Color(204, 0, 0));
        jLabel68.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel68.setText("*");
        jPanel3.add(jLabel68, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 350, 30, 30));

        jLabel26.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "General Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 1, 14), new java.awt.Color(0, 51, 255))); // NOI18N
        jPanel3.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 250, 180));

        person_panel.addTab("External Physician", jPanel3);

        getContentPane().add(person_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 860, 430));

        person_clr.setBackground(new java.awt.Color(204, 204, 255));
        person_clr.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        person_clr.setText("Clear");
        person_clr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                person_clrActionPerformed(evt);
            }
        });
        getContentPane().add(person_clr, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 520, -1, -1));

        person_srch.setBackground(new java.awt.Color(51, 51, 255));
        person_srch.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        person_srch.setText("Search");
        person_srch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                person_srchActionPerformed(evt);
            }
        });
        getContentPane().add(person_srch, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 520, -1, -1));

        person_update.setBackground(new java.awt.Color(102, 102, 255));
        person_update.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        person_update.setText("Update");
        person_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                person_updateActionPerformed(evt);
            }
        });
        getContentPane().add(person_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 520, -1, -1));

        person_delete.setBackground(new java.awt.Color(153, 153, 255));
        person_delete.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        person_delete.setText("Delete");
        person_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                person_deleteActionPerformed(evt);
            }
        });
        getContentPane().add(person_delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 520, -1, -1));

        jLabel54.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(51, 51, 255));
        jLabel54.setText("Person Managment");
        getContentPane().add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 280, 40));

        person_main.setBackground(new java.awt.Color(255, 204, 255));
        person_main.setFont(new java.awt.Font("Segoe UI Semibold", 0, 10)); // NOI18N
        person_main.setText("Main Menu");
        person_main.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                person_mainActionPerformed(evt);
            }
        });
        getContentPane().add(person_main, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 40, 140, 20));

        person_submit.setBackground(new java.awt.Color(0, 0, 255));
        person_submit.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        person_submit.setText("Submit");
        person_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                person_submitActionPerformed(evt);
            }
        });
        getContentPane().add(person_submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 520, -1, -1));

        viewall.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        viewall.setForeground(new java.awt.Color(51, 0, 255));
        viewall.setText("View All Person");
        viewall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewallActionPerformed(evt);
            }
        });
        getContentPane().add(viewall, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 510, 130, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void p_bldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_bldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p_bldActionPerformed

    private void p_contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_contactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p_contactActionPerformed

    private void p_nicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_nicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p_nicActionPerformed

    private void p_addr1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_addr1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p_addr1ActionPerformed

    private void p_addr2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_addr2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p_addr2ActionPerformed

    private void ext_nicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ext_nicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ext_nicActionPerformed

    private void ext_addr1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ext_addr1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ext_addr1ActionPerformed

    private void ext_addr2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ext_addr2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ext_addr2ActionPerformed

    private void ext_contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ext_contactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ext_contactActionPerformed

    private void ext_bldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ext_bldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ext_bldActionPerformed

    private void e_nicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_nicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_nicActionPerformed

    private void e_bldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_bldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_bldActionPerformed

    private void e_addr1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_addr1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_addr1ActionPerformed

    private void e_addr22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_addr22ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_addr22ActionPerformed

    private void e_contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_contactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_contactActionPerformed

    private void e_wrd_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_wrd_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_wrd_nameActionPerformed

    private void e_usrnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_usrnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_usrnameActionPerformed

    private void person_clrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_person_clrActionPerformed
        clear();

    }//GEN-LAST:event_person_clrActionPerformed

    private void person_mainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_person_mainActionPerformed
        menu mn = new menu();
        mn.setVisible(true);
        close();
    }//GEN-LAST:event_person_mainActionPerformed

    private void person_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_person_updateActionPerformed

        try {
            DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd");
            int index = person_panel.getSelectedIndex();

            if (index == 0) {

                String p1_dob = fmt.format(this.p_dob.getDate());
                int pr = 0;
                ResultSet l = query.thequery_search("select person_person_id as person_id from patient where patient_id='" + p_id.getText() + "'");
                if (l.next()) {
                    pr = l.getInt("person_id");

                }
                query.thequery("update person set person_fname ='" + p_fname.getText() + "',person_lname='" + p_lname.getText() + "',gender='" + p_gen.getSelectedItem().toString() + "',person_addr1='" + p_addr1.getText() + "',person_addr2='" + p_addr2.getText() + "',person_contact='" + p_contact.getText() + "',nic='" + p_nic.getText() + "',blood_group='" + p_bld.getText() + "',dob='" + p1_dob + "'where person_id = '" + pr + "'");
                query.thequery("update  patient set gurdian_fname = '" + p_grd_fname.getText() + "',gurdian_lname='" + p_grd_lname.getText() + "',gurdian_contact='" + p_grd_contact.getText() + "' where patient_id = '" + p_id.getText() + "'");



            }
            if (index == 1) {
                String e1_dob = fmt.format(this.e_dob.getDate());
                String e_appt = fmt.format(this.appt_date.getDate());
                int pr1 = 0;
                ResultSet j = query.thequery_search("select person_person_id as person_id from employee where emp_id ='" + e_id.getText() + "'  ");
                if (j.next()) {
                    pr1 = j.getInt("person_id");

                }
                query.thequery("update person set person_fname ='" + e_fname.getText() + "',person_lname='" + e_lname.getText() + "',gender='" + e_gen.getSelectedItem().toString() + "',person_addr1='" + e_addr1.getText() + "',person_addr2='" + e_addr22.getText() + "',person_contact='" + e_contact.getText() + "',nic='" + e_nic.getText() + "',blood_group='" + e_bld.getText() + "',dob='" + e1_dob + "'where person_id = '" + pr1 + "'");

                String name = e_wrd_name.getText();
                int wrd_id = 0;
                ResultSet h = query.thequery_search("select ward_id as w_id from ward where ward_name='" + name + "'");
                if (h.next()) {
                    wrd_id = h.getInt("w_id");
                }
                int emp = 0;
                ResultSet d = query.thequery_search("select emp_id as emp_id from employee");
                if (d.next()) {
                    emp = d.getInt("emp_id");

                }
                query.thequery("update employee set emp_username='" + e_usrname.getText() + "',emp_password='" + e_passwrd2.getText() + "',appointment_date='" + e_appt + "',pin_code='" + e_pin.getText() + "' where emp_id='" + e_id.getText() + "'");

            } else {
                int pr2 = 0;
                ResultSet w = query.thequery_search("select person_person_id as person_id from external_physician where external_phy_id = '" + ext_id.getText() + "'");
                if (w.next()) {
                    pr2 = w.getInt("person_id");

                }
                String ext1_dob = fmt.format(this.ext_dob.getDate());
                query.thequery("update person set person_fname ='" + ext_fname.getText() + "',person_lname='" + ext_lname.getText() + "',gender='" + ext_gen.getSelectedItem().toString() + "',person_addr1='" + ext_addr1.getText() + "',person_addr2='" + ext_addr2.getText() + "',person_contact='" + ext_contact.getText() + "',nic='" + ext_nic.getText() + "',blood_group='" + ext_bld.getText() + "',dob='" + ext1_dob + "' where person_id = '" + pr2 + "'");

                query.thequery("update external_physician set hospital='" + ext_hospital.getText() + "' where external_phy_id='" + ext_id.getText() + "'");

            }

            JOptionPane.showMessageDialog(rootPane, "Person Information Has Updated", "person update", JOptionPane.INFORMATION_MESSAGE);
            clear();

        } catch (Exception ex) { 
        } 
    }//GEN-LAST:event_person_updateActionPerformed

    private void person_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_person_deleteActionPerformed
        try {

            int p = JOptionPane.showConfirmDialog(rootPane, "Are You Sure You want To Delete This Person ? ", "admission delete", JOptionPane.YES_NO_OPTION);
            DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd");
            int index = person_panel.getSelectedIndex();
            if (p == JOptionPane.YES_OPTION) {

                if (index == 0) {
                    int pr = 0;
                    int adm = 0;
                    ResultSet m = query.thequery_search("select * from addmission where Patient_patient_id ='" + p_id.getText() + "' ");
                    if (m.next()) {
                        adm = m.getInt("a_id");

                    }
                    query.thequery("delete from consultant_has_addmission where addmission_a_id='" + adm + "' ");
                    query.thequery("delete from payment where addmission_a_id='" + adm + "' ");
                    query.thequery("delete from addmission_has_ward where addmission_a_id='" + adm + "' ");
                    query.thequery("delete from service_has_addmission where addmission_a_id='" + adm + "' ");
                    query.thequery("delete from addmission where Patient_patient_id='" + p_id.getText() + "' ");
                    ResultSet l = query.thequery_search("select person_person_id from patient where patient_id ='" + p_id.getText() + "' ");
                    if (l.next()) {
                        pr = l.getInt("person_person_id");

                    }

                    query.thequery("delete from patient where patient_id='" + p_id.getText() + "' ");
                    query.thequery("delete from person where person_id='" + pr + "' ");

                }
                if (index == 1) {
                    query.thequery("delete from employee_has_attendance where employee_emp_id='" + e_id.getText() + "' ");

                    if (e_jobtype.getSelectedItem().toString() == "Consultant Doctor") {
                        int doc = 0;
                        int per = 0;
                        int con = 0;
                        ResultSet l = query.thequery_search("select * from consultant where doctor_employee_emp_id ='" + e_id.getText() + "' ");
                        if (l.next()) {
                            doc = l.getInt("doctor_doctor_id");
                            per = l.getInt("doctor_employee_person_person_id");
                            con = l.getInt("consultant_id");
                        }

                        query.thequery("update consultant_has_addmission set consultant_consultant_id=null  where consultant_consultant_id  ='" + con + "' ");
                        query.thequery("delete from consultant where consultant_id='" + con + "' ");
                        query.thequery("delete from doctor where doctor_id='" + doc + "' ");
                        query.thequery("delete from employee where person_person_id='" + per + "' ");
                        query.thequery("delete from person where person_id='" + per + "' ");

                    } else if (e_jobtype.getSelectedItem().toString() == "Doctor") {
                        int doc = 0;
                        int per = 0;
                        int noncon = 0;
                        ResultSet l = query.thequery_search("select * from non_consultant where doctor_employee_emp_id ='" + e_id.getText() + "' ");
                        if (l.next()) {
                            doc = l.getInt("doctor_doctor_id");
                            per = l.getInt("doctor_employee_person_person_id");
                            noncon = l.getInt("non_consultant_id");
                        }

                        query.thequery("update addmission set non_consultant_non_consultant_id=null  where non_consultant_non_consultant_id  ='" + noncon + "' ");
                        query.thequery("delete from non_consultant where non_consultant_id='" + noncon + "' ");
                        query.thequery("delete from doctor where doctor_id='" + doc + "' ");
                        query.thequery("delete from employee where person_person_id='" + per + "' ");
                        query.thequery("delete from person where person_id='" + per + "' ");

                    } else if (e_jobtype.getSelectedItem().toString() == "Nurse") {
                        int nur = 0;
                        int per = 0;
                        ResultSet l = query.thequery_search("select * from nurse where employee_emp_id ='" + e_id.getText() + "' ");
                        if (l.next()) {
                            nur = l.getInt("nurse_id");
                            per = l.getInt("employee_person_person_id");
                        }

                        query.thequery("delete from nurse where nurse_id='" + nur + "' ");
                        query.thequery("delete from employee where person_person_id='" + per + "' ");
                        query.thequery("delete from person where person_id='" + per + "' ");

                    } else if (e_jobtype.getSelectedItem().toString() == "Maintenance Staff") {
                        int ms = 0;
                        int per = 0;
                        ResultSet l = query.thequery_search("select * from maintenance_staff where employee_emp_id ='" + e_id.getText() + "' ");
                        if (l.next()) {
                            ms = l.getInt("m_staff_id");
                            per = l.getInt("employee_person_person_id");
                        }

                        query.thequery("delete from maintenance_staff where m_staff_id='" + ms + "' ");
                        query.thequery("delete from employee where person_person_id='" + per + "' ");
                        query.thequery("delete from person where person_id='" + per + "' ");

                    }

                }
                if (index == 2) {

                    int per = 0;

                    ResultSet l = query.thequery_search("select * from external_physician where external_phy_id ='" + ext_id.getText() + "' ");
                    if (l.next()) {

                        per = l.getInt("person_person_id");

                    }

                    query.thequery("update addmission set external_physician_external_phy_id=null  where external_physician_external_phy_id  ='" + ext_id.getText() + "' ");
                    query.thequery("delete from external_physician where external_phy_id='" + ext_id.getText() + "' ");
                    query.thequery("delete from person where person_id='" + per + "' ");

                }
                JOptionPane.showMessageDialog(null, "Pesron Has Deleted !!! ", "Delete Person", JOptionPane.ERROR_MESSAGE);

                clear();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Please Enter Valid ID !!! ", "Error Message", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_person_deleteActionPerformed

    private void e_pinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_pinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_pinActionPerformed

    private void e_passwrd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_passwrd2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_passwrd2ActionPerformed

    private void person_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_person_submitActionPerformed
        // TODO add your handling code here:

        DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd");

        int index = person_panel.getSelectedIndex();

        if (index == 0) {
            try {
                String p1_dob = fmt.format(this.p_dob.getDate());

                query.thequery("insert into person (person_fname,person_lname,gender,person_addr1,person_addr2,person_contact,nic,blood_group,dob) values('" + p_fname.getText() + "','" + p_lname.getText() + "','" + p_gen.getSelectedItem().toString() + "','" + p_addr1.getText() + "','" + p_addr2.getText() + "','" + p_contact.getText() + "','" + p_nic.getText() + "','" + p_bld.getText() + "','" + p1_dob + "')");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Check again whether you have entered the data for required text fields (that are represent in stars) !!! ", "Error Message", JOptionPane.ERROR_MESSAGE);

            }
            try {
                int pr = 0;
                ResultSet l = query.thequery_search("select max(person_id)as person_id from person");
                if (l.next()) {
                    pr = l.getInt("person_id");

                }

                query.thequery("insert into patient (person_person_id,gurdian_fname,gurdian_lname,gurdian_contact) values('" + pr + "','" + p_grd_fname.getText() + "','" + p_grd_lname.getText() + "','" + p_grd_contact.getText() + "')");
                JOptionPane.showMessageDialog(rootPane, "New Person Has Added", "person submit", JOptionPane.INFORMATION_MESSAGE);

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Please Enter the gurdian contact number ", "Null value1", JOptionPane.ERROR_MESSAGE);

            }

        } else if (index == 1) {
            try {
                String e1_dob = fmt.format(this.e_dob.getDate());

                query.thequery("insert into person (person_fname,person_lname,gender,person_addr1,person_addr2,person_contact,nic,blood_group,dob) values('" + e_fname.getText() + "','" + e_lname.getText() + "','" + e_gen.getSelectedItem().toString() + "','" + e_addr1.getText() + "','" + e_addr22.getText() + "','" + e_contact.getText() + "','" + e_nic.getText() + "','" + e_bld.getText() + "','" + e1_dob + "')");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Check again whether you have entered the data for required text fields (that are represent in stars) !!! ", "Error Message", JOptionPane.ERROR_MESSAGE);

            }
            int pr1 = 0;
            try {
                String e_appt = fmt.format(this.appt_date.getDate());
                ResultSet j = query.thequery_search("select max(person_id)as person_id from person");
                if (j.next()) {
                    pr1 = j.getInt("person_id");

                }
                String name = e_wrd_name.getText();
                int wrd_id = 0;
                ResultSet h = query.thequery_search("select ward_id as w_id from ward where ward_name='" + name + "'");
                if (h.next()) {
                    wrd_id = h.getInt("w_id");
                }

                query.thequery("insert into employee (emp_username,emp_password,appointment_date,person_person_id,pin_code,ward_ward_id) values('" + e_usrname.getText() + "','" + e_passwrd2.getText() + "','" + e_appt + "','" + pr1 + "','" + e_pin.getText() + "','" + wrd_id + "')");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Enter the valid Ward name or make sure to fill required fields!!! ", "Error Message", JOptionPane.ERROR_MESSAGE);
            }
            try {
                int emp = 0;
                ResultSet d = query.thequery_search("select max(emp_id)as emp_id from employee");
                if (d.next()) {
                    emp = d.getInt("emp_id");

                }
                if (e_jobtype.getSelectedItem().toString() == "Doctor") {
                    query.thequery("insert into doctor  (employee_emp_id,employee_person_person_id) values('" + emp + "','" + pr1 + "')");
                    int doc = 0;
                    ResultSet m = query.thequery_search("select max(doctor_id)as doctor_id from doctor");
                    if (m.next()) {
                        doc = m.getInt("doctor_id");

                    }

                    query.thequery("insert into non_consultant (doctor_doctor_id,doctor_employee_emp_id,doctor_employee_person_person_id) values('" + doc + "','" + emp + "','" + pr1 + "')");
                    JOptionPane.showMessageDialog(rootPane, "New Person Has Added", "person submit", JOptionPane.INFORMATION_MESSAGE);

                } else if (e_jobtype.getSelectedItem().toString() == "Consultant Doctor") {
                    query.thequery("insert into doctor  (employee_emp_id,employee_person_person_id) values('" + emp + "','" + pr1 + "')");
                    int doc1 = 0;
                    ResultSet f = query.thequery_search("select max(doctor_id) as doctor_id from doctor");
                    if (f.next()) {
                        doc1 = f.getInt("doctor_id");

                    }

                    query.thequery("insert into consultant  (doctor_doctor_id,doctor_employee_emp_id,doctor_employee_person_person_id) values('" + doc1 + "','" + emp + "','" + pr1 + "')");
                    JOptionPane.showMessageDialog(rootPane, "New Person Has Added", "person submit", JOptionPane.INFORMATION_MESSAGE);

                } else if (e_jobtype.getSelectedItem().toString() == "Nurse") {
                    query.thequery("insert into nurse  (employee_emp_id,employee_person_person_id) values('" + emp + "','" + pr1 + "')");
                    JOptionPane.showMessageDialog(rootPane, "New Person Has Added", "person submit", JOptionPane.INFORMATION_MESSAGE);

                } else if (e_jobtype.getSelectedItem().toString() == "Maintenance Staff") {
                    query.thequery("insert into maintenance_staff (employee_emp_id,employee_person_person_id) values('" + emp + "','" + pr1 + "')");
                    JOptionPane.showMessageDialog(rootPane, "New Person Has Added", "person submit", JOptionPane.INFORMATION_MESSAGE);

                }
            } catch (Exception ex1) {

            }

        } else {
            try {
                int pr2 = 0;
                ResultSet w = query.thequery_search("select max(person_id)as person_id from person");
                if (w.next()) {
                    pr2 = w.getInt("person_id");
                    pr2++;
                }
                String ext1_dob = fmt.format(this.ext_dob.getDate());

                query.thequery("insert into person (person_fname,person_lname,gender,person_addr1,person_addr2,person_contact,nic,blood_group,dob) values('" + ext_fname.getText() + "','" + ext_lname.getText() + "','" + ext_gen.getSelectedItem().toString() + "','" + ext_addr1.getText() + "','" + ext_addr2.getText() + "','" + ext_contact.getText() + "','" + ext_nic.getText() + "','" + ext_bld.getText() + "','" + ext1_dob + "')");
                query.thequery("insert into external_physician (hospital,person_person_id) values('" + ext_hospital.getText() + "','" + pr2 + "')");
                JOptionPane.showMessageDialog(rootPane, "New Person Has Added", "person submit", JOptionPane.INFORMATION_MESSAGE);

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Check again whether you have entered the data for required text fields (that are represent in stars) !!! ", "Error Message", JOptionPane.ERROR_MESSAGE);

            }

        }

        clear();
    }//GEN-LAST:event_person_submitActionPerformed

    private void p_grd_fnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_grd_fnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p_grd_fnameActionPerformed

    private void p_grd_lnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_grd_lnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p_grd_lnameActionPerformed

    private void p_grd_contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_grd_contactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p_grd_contactActionPerformed

    private void e_genActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_genActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_genActionPerformed

    private void p_idKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_p_idKeyPressed
        // TODO add your handling code here:
        int key = evt.getExtendedKeyCode();
        if (key >= evt.VK_0 && key <= evt.VK_9 || key == KeyEvent.VK_BACK_SPACE || key == KeyEvent.VK_DELETE || key >= evt.VK_A && key <= evt.VK_Z) {
            p_id.setEditable(true);

        } else {
            p_id.setEditable(false);

        }

    }//GEN-LAST:event_p_idKeyPressed

    private void p_bldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_p_bldKeyPressed
        // TODO add your handling code here:
        int key = evt.getExtendedKeyCode();
        if (key >= evt.VK_0 && key <= evt.VK_9) {
            p_bld.setEditable(false);

        } else {
            p_bld.setEditable(true);

        }
    }//GEN-LAST:event_p_bldKeyPressed

    private void p_dobKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_p_dobKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_p_dobKeyPressed

    private void p_grd_contactKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_p_grd_contactKeyPressed
        // TODO add your handling code here:
        int key = evt.getExtendedKeyCode();
        if (key >= evt.VK_0 && key <= evt.VK_9 || key == KeyEvent.VK_BACK_SPACE || key == KeyEvent.VK_DELETE) {
            p_grd_contact.setEditable(true);

        } else {
            p_grd_contact.setEditable(false);

        }
    }//GEN-LAST:event_p_grd_contactKeyPressed

    private void p_contactKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_p_contactKeyPressed
        // TODO add your handling code here:
        int key = evt.getExtendedKeyCode();
        if (key >= evt.VK_0 && key <= evt.VK_9 || key == KeyEvent.VK_BACK_SPACE || key == KeyEvent.VK_DELETE) {
            p_contact.setEditable(true);

        } else {
            p_contact.setEditable(false);

        }
    }//GEN-LAST:event_p_contactKeyPressed

    private void e_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_idActionPerformed

    private void e_idKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_e_idKeyPressed
        // TODO add your handling code here:
        int key = evt.getExtendedKeyCode();
        if (key >= evt.VK_0 && key <= evt.VK_9 || key == KeyEvent.VK_BACK_SPACE || key == KeyEvent.VK_DELETE || key >= evt.VK_A && key <= evt.VK_Z) {
            e_id.setEditable(true);

        } else {
            e_id.setEditable(false);

        }
    }//GEN-LAST:event_e_idKeyPressed

    private void e_bldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_e_bldKeyPressed
        // TODO add your handling code here:
        int key = evt.getExtendedKeyCode();
        if (key >= evt.VK_0 && key <= evt.VK_9) {
            e_bld.setEditable(false);

        } else {
            e_bld.setEditable(true);

        }
    }//GEN-LAST:event_e_bldKeyPressed

    private void e_contactKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_e_contactKeyPressed
        // TODO add your handling code here:
        int key = evt.getExtendedKeyCode();
        if (key >= evt.VK_0 && key <= evt.VK_9 || key == KeyEvent.VK_BACK_SPACE || key == KeyEvent.VK_DELETE) {
            e_contact.setEditable(true);

        } else {
            e_contact.setEditable(false);

        }
    }//GEN-LAST:event_e_contactKeyPressed

    private void ext_idKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ext_idKeyPressed
        // TODO add your handling code here:
        int key = evt.getExtendedKeyCode();
        if (key >= evt.VK_0 && key <= evt.VK_9 || key == KeyEvent.VK_BACK_SPACE || key == KeyEvent.VK_DELETE || key >= evt.VK_A && key <= evt.VK_Z) {
            ext_id.setEditable(true);

        } else {
            ext_id.setEditable(false);

        }
    }//GEN-LAST:event_ext_idKeyPressed

    private void ext_contactKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ext_contactKeyPressed
        // TODO add your handling code here:
        int key = evt.getExtendedKeyCode();
        if (key >= evt.VK_0 && key <= evt.VK_9 || key == KeyEvent.VK_BACK_SPACE || key == KeyEvent.VK_DELETE) {
            ext_contact.setEditable(true);

        } else {
            ext_contact.setEditable(false);

        }
    }//GEN-LAST:event_ext_contactKeyPressed

    private void ext_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ext_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ext_idActionPerformed

    private void e_wrd_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_e_wrd_nameKeyPressed
        // TODO add your handling code here:
        int key = evt.getExtendedKeyCode();
        if (key >= evt.VK_0 && key <= evt.VK_9 || key == KeyEvent.VK_BACK_SPACE || key == KeyEvent.VK_DELETE || key >= evt.VK_A && key <= evt.VK_Z) {
            e_wrd_name.setEditable(true);

        } else {
            e_wrd_name.setEditable(false);

        }
    }//GEN-LAST:event_e_wrd_nameKeyPressed

    private void person_srchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_person_srchActionPerformed
        // TODO add your handling code here:
        try {
            DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd");
            int index = person_panel.getSelectedIndex();

            if (index == 0) {

                int pt_id = 0;
                String fname = null;
                String lname = null;
                String gen = null;
                String pp_addr1 = null;
                String pp_addr2 = null;
                int pp_contact = 0;
                String nic = null;
                String bld = null;
                String pp_dob = null;
                String gg_fname = null;
                String gg_lname = null;
                int gg_contact = 0;

                ResultSet j = query.thequery_search("select person_person_id as per_id,gurdian_fname as g_fname,gurdian_lname as g_lname,gurdian_contact as g_contact from patient where patient_id='" + p_id.getText() + "'");
                if (j.next()) {

                }
                ResultSet m = query.thequery_search("select * from person inner join patient on person.person_id = patient.person_person_id where person.person_contact='" + p_contact.getText() + "' or person.nic='" + p_nic.getText() + "' or patient.patient_id= '" + p_id.getText() + "'");
                if (m.next()) {
                    gg_fname = m.getString("patient.gurdian_fname");
                    gg_lname = m.getString("patient.gurdian_lname");
                    gg_contact = m.getInt("patient.gurdian_contact");
                    pt_id = m.getInt("patient.patient_id");
                    fname = m.getString("person.person_fname");
                    lname = m.getString("person.person_lname");
                    gen = m.getString("person.gender");
                    pp_addr1 = m.getString("person.person_addr1");
                    pp_addr2 = m.getString("person.person_addr2");
                    pp_contact = m.getInt("person.person_contact");
                    nic = m.getString("person.nic");
                    bld = m.getString("person.blood_group");
                    pp_dob = fmt.format(m.getDate("person.dob"));

                }

                Date date = fmt.parse(pp_dob);
                if (gen.equals("Male")) {
                    p_gen.setSelectedIndex(0);
                } else {
                    p_gen.setSelectedIndex(1);
                }
                p_id.setText(pt_id + "");
                p_addr1.setText(pp_addr1);
                p_addr2.setText(pp_addr2);
                p_bld.setText(bld);
                p_contact.setText(pp_contact + "");
                p_fname.setText(fname);
                p_lname.setText(lname);
                p_nic.setText(nic);
                p_grd_fname.setText(gg_fname);
                p_grd_lname.setText(gg_lname);
                p_grd_contact.setText(gg_contact + "");
                p_dob.setDate(date);

            }

            if (index == 1) {

                int emp_id = 0;
                String fname = null;
                String lname = null;
                String gen = null;
                String pp_addr1 = null;
                String pp_addr2 = null;
                int pp_contact = 0;
                String nic = null;
                String bld = null;
                String pp_dob = null;
                String user_name = null;
                String password = null;
                String app_date = null;
                int pin = 0;
                int ward_id = 0;
                String ward_name = null;
                String doc = null;
                String con_doc = null;
                String nurse = null;
                String m_staff = null;

                ResultSet m = query.thequery_search("select * from person inner join employee on person.person_id = employee.person_person_id where person.person_contact='" + e_contact.getText() + "' or person.nic='" + e_nic.getText() + "' or employee.emp_id= '" + e_id.getText() + "'");

                if (m.next()) {
                    emp_id = m.getInt("employee.emp_id");
                    user_name = m.getString("employee.emp_username");
                    password = m.getString("emp_password");
                    app_date = fmt.format(m.getDate("employee.appointment_date"));
                    pin = m.getInt("employee.pin_code");
                    ward_id = m.getInt("employee.ward_ward_id");
                    fname = m.getString("person.person_fname");
                    lname = m.getString("person.person_lname");
                    gen = m.getString("person.gender");
                    pp_addr1 = m.getString("person.person_addr1");
                    pp_addr2 = m.getString("person.person_addr2");
                    pp_contact = m.getInt("person.person_contact");
                    nic = m.getString("person.nic");
                    bld = m.getString("person.blood_group");
                    pp_dob = fmt.format(m.getDate("person.dob"));

                }

                ResultSet g = query.thequery_search("select * from consultant where doctor_employee_emp_id='" + emp_id + "'");
                ResultSet h = query.thequery_search("select * from non_consultant where doctor_employee_emp_id='" + emp_id + "'");
                ResultSet i = query.thequery_search("select * from nurse where employee_emp_id='" + emp_id + "'");
                ResultSet l = query.thequery_search("select * from maintenance_staff where employee_emp_id='" + emp_id + "'");

                ResultSet k = query.thequery_search("select ward_name from ward where ward_id='" + ward_id + "'");
                if (k.next()) {
                    ward_name = k.getString("ward_name");
                }
                if (h.next()) {
                    e_jobtype.setSelectedIndex(0);
                } else if (g.next()) {
                    e_jobtype.setSelectedIndex(1);
                } else if (i.next()) {
                    e_jobtype.setSelectedIndex(2);
                } else if (l.next()) {
                    e_jobtype.setSelectedIndex(3);
                }
                Date date = fmt.parse(pp_dob);
                Date date1 = fmt.parse(app_date);
                if (gen.equals("Male")) {
                    e_gen.setSelectedIndex(0);
                } else {
                    e_gen.setSelectedIndex(1);
                }
                System.out.println(password);
                System.out.println(currentpass);

               if(password.equals(currentpass)){
                e_usrname.setText(user_name);
                e_passwrd2.setText(password);
                e_pin.setText(pin + "");
               }
                e_id.setText(emp_id + "");
                e_addr1.setText(pp_addr1);
                e_addr22.setText(pp_addr2);
                e_bld.setText(bld);
                e_contact.setText(pp_contact + "");
                e_fname.setText(fname);
                e_lname.setText(lname);
                e_nic.setText(nic);
                
                appt_date.setDate(date1);
                e_dob.setDate(date);
                e_wrd_name.setText(ward_name);

            }

            if (index == 2) {

                int ex_id = 0;
                String fname = null;
                String lname = null;
                String gen = null;
                String pp_addr1 = null;
                String pp_addr2 = null;
                int pp_contact = 0;
                String nic = null;
                String bld = null;
                String pp_dob = null;
                String hospital = null;

                ResultSet m = query.thequery_search("select * from person inner join external_physician on person.person_id = external_physician.person_person_id where person.person_contact='" + ext_contact.getText() + "' or person.nic='" + ext_nic.getText() + "' or external_physician.external_phy_id= '" + ext_id.getText() + "'");

                if (m.next()) {
                    ex_id = m.getInt("external_physician.external_phy_id");
                    hospital = m.getString("external_physician.hospital");
                    fname = m.getString("person.person_fname");
                    lname = m.getString("person.person_lname");
                    gen = m.getString("person.gender");
                    pp_addr1 = m.getString("person.person_addr1");
                    pp_addr2 = m.getString("person.person_addr2");
                    pp_contact = m.getInt("person.person_contact");
                    nic = m.getString("person.nic");
                    bld = m.getString("person.blood_group");
                    pp_dob = fmt.format(m.getDate("person.dob"));

                }

                Date date = fmt.parse(pp_dob);
                if (gen.equals("Male")) {
                    ext_gen.setSelectedIndex(0);
                } else {
                    ext_gen.setSelectedIndex(1);
                }
                ext_id.setText(ex_id + "");
                ext_addr1.setText(pp_addr1);
                ext_addr2.setText(pp_addr2);
                ext_bld.setText(bld);
                ext_contact.setText(pp_contact + "");
                ext_fname.setText(fname);
                ext_lname.setText(lname);
                ext_nic.setText(nic);
                ext_hospital.setText(hospital);
                ext_dob.setDate(date);

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Please Enter NIC Number or Contact Number or ID Number !!! ", "Error Message", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_person_srchActionPerformed

    private void e_jobtypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_jobtypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_jobtypeActionPerformed

    private void viewallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewallActionPerformed
        try {
            // TODO add your handling code here:

            View_All_person v = new View_All_person();
            v.setVisible(true);

            int contact = 0;
            int nur_id = 0;
            int nur_per_id = 0;
            int non_con_id = 0;
            int con_id = 0;
            int extphy_id = 0;
            int non_conper_id = 0;
            int conper_id = 0;
            int extper_id = 0;
            String noncon_fname = null;
            String noncon_lname = null;
            String con_fname = null;
            String con_lname = null;
            String ext_fname = null;
            String ext_lname = null;
            String nonnic = null;
            String connic = null;
            String extnic = null;
            int noncontact = 0;
            int concontact = 0;
            int extcontact = 0;

            ResultSet j = query.thequery_search("select * from non_consultant");
            ResultSet k = query.thequery_search("select * from consultant");
            ResultSet l = query.thequery_search("select * from external_physician");
            ResultSet p = query.thequery_search("select * from Patient");
            ResultSet x = query.thequery_search("select * from nurse");
            ResultSet c = query.thequery_search("select * from maintenance_staff");

            while (j.next()) {
                String gender = null;
                non_con_id = j.getInt("non_consultant_id");
                non_conper_id = j.getInt("doctor_employee_person_person_id");
                ResultSet m = query.thequery_search("select * from person where person_id ='" + non_conper_id + "'");
                while (m.next()) {
                    noncon_fname = m.getString("person_fname");
                    noncon_lname = m.getString("person_lname");
                    noncontact = m.getInt("person_contact");
                    nonnic = m.getString("nic");
                    gender = m.getString("gender");
                    
                    v.table_edit(non_con_id, "Non Consultant", noncon_fname, noncon_lname,gender, nonnic, noncontact);

                }

            }
            while (k.next()) {
                String gender = null;
                con_id = k.getInt("consultant_id");
                conper_id = k.getInt("doctor_employee_person_person_id");
                ResultSet n = query.thequery_search("select * from person where person_id ='" + conper_id + "'");
                while (n.next()) {
                    con_fname = n.getString("person_fname");
                    con_lname = n.getString("person_lname");
                    concontact = n.getInt("person_contact");
                    connic = n.getString("nic");
                    gender = n.getString("gender");
                    v.table_edit(con_id, "Consultant", con_fname, con_lname,gender, connic, concontact);

                }

            }
            while (l.next()) {
                String gender = null;
                extphy_id = l.getInt("external_phy_id");
                extper_id = l.getInt("person_person_id");
                ResultSet b = query.thequery_search("select * from person where person_id ='" + extper_id + "'");
                while (b.next()) {
                    ext_fname = b.getString("person_fname");
                    ext_lname = b.getString("person_lname");
                    extcontact = b.getInt("person_contact");
                    extnic = b.getString("nic");
                    gender = b.getString("gender");
                    v.table_edit(extphy_id, "External Physician", ext_fname, ext_lname,gender, extnic, extcontact);

                }
            }

            while (p.next()) {
                int p_id = 0;
                int per_id = 0;
                String nic = null;
                String fname = null;
                String lname = null;
                String gender = null;
                
                p_id = p.getInt("patient_id");
                per_id = p.getInt("person_person_id");
                ResultSet q = query.thequery_search("select * from person where person_id ='" + per_id + "'");
                while (q.next()) {
                    fname = q.getString("person_fname");
                    lname = q.getString("person_lname");
                    contact = q.getInt("person_contact");
                    nic = q.getString("nic");
                    gender = q.getString("gender");
                    v.table_edit(p_id, "Patient", fname, lname,gender, nic, contact);

                }
            }
            
            while (x.next()) {
                int n_id = 0;
                int nper_id = 0;
                String nnic = null;
                String nfname = null;
                String nlname = null;
                String ngender = null;
                int ncontact = 0;
                n_id = x.getInt("nurse_id");
                nper_id = x.getInt("employee_person_person_id");
                ResultSet o= query.thequery_search("select * from person where person_id ='" + nper_id + "'");
                while (o.next()) {
                    nfname = o.getString("person_fname");
                    nlname = o.getString("person_lname");
                    ncontact = o.getInt("person_contact");
                    nnic = o.getString("nic");
                    ngender = o.getString("gender");
                    v.table_edit(n_id, "Nurse", nfname, nlname,ngender, nnic, ncontact);

                }
            }
            while (c.next()) {
                int m_id = 0;
                int mper_id = 0;
                String mnic = null;
                String mfname = null;
                String mlname = null;
                String mgender = null;
                int mcontact = 0;
                m_id = c.getInt("m_staff_id");
                mper_id = c.getInt("employee_person_person_id");
                ResultSet y= query.thequery_search("select * from person where person_id ='" + mper_id + "'");
                while (y.next()) {
                    mfname = y.getString("person_fname");
                    mlname = y.getString("person_lname");
                    mcontact = y.getInt("person_contact");
                    mnic = y.getString("nic");
                    mgender = y.getString("gender");
                    v.table_edit(m_id, "M_Staff", mfname, mlname,mgender, mnic, mcontact);

                }
            }
        } catch (Exception ex) {
        }

    }//GEN-LAST:event_viewallActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(person.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(person.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(person.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(person.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new person().setVisible(true);
            }
        });
    }

    private void close() {
        WindowEvent winclosing = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winclosing);

    }

    private void clear() {
        e_id.setEditable(true);
        e_id.setText("");
        e_addr1.setText("");
        e_addr22.setText("");
        appt_date.setCalendar(null);
        e_bld.setText("");
        e_contact.setText("");
        e_fname.setText("");

        e_lname.setText("");
        e_nic.setText("");
        e_usrname.setText("");
        e_wrd_name.setText("");
        e_pin.setText("");
        p_id.setEditable(true);
        p_id.setText("");
        p_addr1.setText("");
        p_addr2.setText("");
        p_bld.setText("");
        p_contact.setText("");
        p_fname.setText("");

        p_lname.setText("");
        p_nic.setText("");
        p_grd_fname.setText("");
        p_grd_lname.setText("");
        p_grd_contact.setText("");
        ext_id.setEditable(true);
        ext_id.setText("");
        ext_addr1.setText("");
        ext_addr2.setText("");
        ext_bld.setText("");
        ext_contact.setText("");
        ext_fname.setText("");
        ext_lname.setText("");

        dd.setText("");
        ext_nic.setText("");
        ext_hospital.setText("");
        p_dob.setCalendar(null);
        e_dob.setCalendar(null);
        ext_dob.setCalendar(null);
        e_passwrd2.setText("");
        ext_gen.setSelectedIndex(0);
        e_gen.setSelectedIndex(0);
        p_gen.setSelectedIndex(0);
        ext_id.setEditable(true);
        e_jobtype.setSelectedIndex(0);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser appt_date;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel dd;
    private javax.swing.JTextField e_addr1;
    private javax.swing.JTextField e_addr22;
    private javax.swing.JTextField e_bld;
    private javax.swing.JTextField e_contact;
    private com.toedter.calendar.JDateChooser e_dob;
    private javax.swing.JTextField e_fname;
    private javax.swing.JComboBox<String> e_gen;
    private javax.swing.JTextField e_id;
    private javax.swing.JComboBox<String> e_jobtype;
    private javax.swing.JTextField e_lname;
    private javax.swing.JTextField e_nic;
    private javax.swing.JTextField e_passwrd2;
    private javax.swing.JTextField e_pin;
    private javax.swing.JTextField e_usrname;
    private javax.swing.JTextField e_wrd_name;
    private javax.swing.JTextField ext_addr1;
    private javax.swing.JTextField ext_addr2;
    private javax.swing.JTextField ext_bld;
    private javax.swing.JTextField ext_contact;
    private com.toedter.calendar.JDateChooser ext_dob;
    private javax.swing.JTextField ext_fname;
    private javax.swing.JComboBox<String> ext_gen;
    private javax.swing.JTextField ext_hospital;
    private javax.swing.JTextField ext_id;
    private javax.swing.JTextField ext_lname;
    private javax.swing.JTextField ext_nic;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField p_addr1;
    private javax.swing.JTextField p_addr2;
    private javax.swing.JTextField p_bld;
    private javax.swing.JTextField p_contact;
    private com.toedter.calendar.JDateChooser p_dob;
    private javax.swing.JTextField p_fname;
    private javax.swing.JComboBox<String> p_gen;
    private javax.swing.JTextField p_grd_contact;
    private javax.swing.JTextField p_grd_fname;
    private javax.swing.JTextField p_grd_lname;
    private javax.swing.JTextField p_id;
    private javax.swing.JTextField p_lname;
    private javax.swing.JTextField p_nic;
    private javax.swing.JButton person_clr;
    private javax.swing.JButton person_delete;
    private javax.swing.JButton person_main;
    private javax.swing.JTabbedPane person_panel;
    private javax.swing.JButton person_srch;
    private javax.swing.JButton person_submit;
    private javax.swing.JButton person_update;
    private javax.swing.JButton viewall;
    // End of variables declaration//GEN-END:variables
}
