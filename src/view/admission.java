/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.ResultSet;
import java.sql.Time;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.addmission_mod;
import models.query;

/**
 *
 * @author hima1993
 */
public class admission extends javax.swing.JFrame {

    /**
     * Creates new form admission
     */
    public admission() {
        initComponents();
    }
    public void set(int a_id,int ap_id,String fname,String lname,int w_id,Date date,Date date2,String dish_time,String ad_time,int con_id,int noncon_id,int ext_id){
            adm_id.setText(a_id+"");
            adm_patient_id.setText(ap_id + "");
            adm_p_fname.setText(fname);
            adm_p_lname.setText(lname);
            adm_ward_id.setText(w_id + "");
            admit_date.setDate(date);

            dis_date.setDate(date2);
            dis_time.setText(dish_time);

            admit_time.setText(ad_time);
            adm_consultant_id3.setText(con_id + "");
            adm_nonconsultant_id.setText(noncon_id + "");
            adm_ext_id.setText(ext_id + "");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        adm_id = new javax.swing.JTextField();
        adm_p_fname = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        adm_p_lname = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        adm_recommend = new javax.swing.JTabbedPane();
        adm_consult = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        adm_consultant_lname = new javax.swing.JTextField();
        adm_consultant_fname = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        adm_consultant_id3 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        adm_ext = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        adm_ext_id = new javax.swing.JTextField();
        adm_ext_fname = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        adm_ext_lname = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        adm_consultant_id = new javax.swing.JTextField();
        adm_consultant_id2 = new javax.swing.JTextField();
        adm_nonconsultant_id = new javax.swing.JTextField();
        adm_nonconsultant_lname = new javax.swing.JTextField();
        adm_nonconsultant_fname = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        adm_clr = new javax.swing.JButton();
        adm_submit1 = new javax.swing.JButton();
        adm_main = new javax.swing.JButton();
        adm_search = new javax.swing.JButton();
        adm_edit = new javax.swing.JButton();
        adm_delete = new javax.swing.JButton();
        adm_patient_id = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        admit_date = new com.toedter.calendar.JDateChooser();
        dis_date = new com.toedter.calendar.JDateChooser();
        adm_ward_id = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        admit_time = new javax.swing.JTextField();
        dis_time = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_recom = new javax.swing.JTable();
        src_recomn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        admit_ = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel20.setText("Discharge Time");
        jLabel20.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 90, 30));

        jLabel21.setText("Ward ID");
        jLabel21.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 90, 30));

        jLabel22.setText("Patient ID");
        jLabel22.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 90, 30));
        getContentPane().add(adm_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, 40, 30));

        adm_p_fname.setEditable(false);
        adm_p_fname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adm_p_fnameActionPerformed(evt);
            }
        });
        getContentPane().add(adm_p_fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 170, 120, 40));

        jLabel23.setText("Patient Initials");
        jLabel23.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 90, 30));

        jLabel24.setText("Admit Date");
        jLabel24.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 90, 30));

        jLabel25.setText("Admit Time");
        jLabel25.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        getContentPane().add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 90, 30));

        jLabel28.setText("Discharge Date");
        jLabel28.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        getContentPane().add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, 90, 30));

        adm_p_lname.setEditable(false);
        adm_p_lname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adm_p_lnameActionPerformed(evt);
            }
        });
        getContentPane().add(adm_p_lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 220, 120, 40));
        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 100, -1, -1));

        adm_consult.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Consultant Surname");
        adm_consult.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 100, 30));

        jLabel2.setText("Consultant ID");
        adm_consult.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 80, 30));

        adm_consultant_lname.setEditable(false);
        adm_consult.add(adm_consultant_lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 100, 30));

        adm_consultant_fname.setEditable(false);
        adm_consult.add(adm_consultant_fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 100, 30));

        jLabel7.setText("Consultant Initials");
        adm_consult.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 90, 30));

        adm_consultant_id3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adm_consultant_id3ActionPerformed(evt);
            }
        });
        adm_consult.add(adm_consultant_id3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 100, 30));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("*");
        adm_consult.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 40, 30));

        adm_recommend.addTab("Consultant", adm_consult);

        adm_ext.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setText("Physician ID");
        adm_ext.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 80, 30));

        jLabel5.setText("Physician Initials");
        adm_ext.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 90, 30));

        adm_ext_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adm_ext_idActionPerformed(evt);
            }
        });
        adm_ext.add(adm_ext_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 100, 30));

        adm_ext_fname.setEditable(false);
        adm_ext.add(adm_ext_fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 100, 30));

        jLabel8.setText("Physician Surname");
        adm_ext.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 100, 30));

        adm_ext_lname.setEditable(false);
        adm_ext.add(adm_ext_lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 100, 30));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 0, 0));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("*");
        adm_ext.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 40, 30));

        adm_recommend.addTab("External Physician", adm_ext);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        adm_consultant_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adm_consultant_idActionPerformed(evt);
            }
        });
        jPanel1.add(adm_consultant_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 360, 100, 30));

        adm_consultant_id2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adm_consultant_id2ActionPerformed(evt);
            }
        });
        jPanel1.add(adm_consultant_id2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 360, 100, 30));

        adm_nonconsultant_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adm_nonconsultant_idActionPerformed(evt);
            }
        });
        jPanel1.add(adm_nonconsultant_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 100, 30));

        adm_nonconsultant_lname.setEditable(false);
        jPanel1.add(adm_nonconsultant_lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 100, 30));

        adm_nonconsultant_fname.setEditable(false);
        jPanel1.add(adm_nonconsultant_fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 100, 30));

        jLabel6.setText("Non Consultant ID");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 110, 30));

        jLabel9.setText("Non Consultant Initials");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 120, 30));

        jLabel10.setText("Non Consultant Surname");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 100, -1, 30));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 0, 0));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("*");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 40, 30));

        adm_recommend.addTab("Non Consultant", jPanel1);

        getContentPane().add(adm_recommend, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, 340, 220));

        adm_clr.setBackground(new java.awt.Color(204, 204, 255));
        adm_clr.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        adm_clr.setText("Clear");
        adm_clr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adm_clrActionPerformed(evt);
            }
        });
        getContentPane().add(adm_clr, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 440, 100, 40));

        adm_submit1.setBackground(new java.awt.Color(102, 102, 255));
        adm_submit1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        adm_submit1.setText("Submit");
        adm_submit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adm_submit1ActionPerformed(evt);
            }
        });
        getContentPane().add(adm_submit1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 320, 90, 40));

        adm_main.setText("Main Menu");
        adm_main.setBackground(new java.awt.Color(255, 204, 255));
        adm_main.setFont(new java.awt.Font("Segoe UI Semibold", 0, 10)); // NOI18N
        adm_main.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adm_mainActionPerformed(evt);
            }
        });
        getContentPane().add(adm_main, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, 140, 20));

        adm_search.setBackground(new java.awt.Color(51, 51, 255));
        adm_search.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        adm_search.setText("Search");
        adm_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adm_searchActionPerformed(evt);
            }
        });
        getContentPane().add(adm_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 320, 90, 40));

        adm_edit.setBackground(new java.awt.Color(102, 102, 255));
        adm_edit.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        adm_edit.setText("Update");
        adm_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adm_editActionPerformed(evt);
            }
        });
        getContentPane().add(adm_edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 380, 90, 40));

        adm_delete.setBackground(new java.awt.Color(153, 153, 255));
        adm_delete.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        adm_delete.setText("Patient History ");
        adm_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adm_deleteActionPerformed(evt);
            }
        });
        getContentPane().add(adm_delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 380, 160, 40));

        adm_patient_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adm_patient_idActionPerformed(evt);
            }
        });
        getContentPane().add(adm_patient_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 120, 40));

        jLabel26.setText("Patient Surname");
        jLabel26.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        getContentPane().add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 90, 30));
        getContentPane().add(admit_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 270, 120, 40));
        getContentPane().add(dis_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 370, 120, 40));
        getContentPane().add(adm_ward_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, 120, 30));

        jLabel27.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel27.setText("Admission ID");
        getContentPane().add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 90, 30));

        admit_time.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                admit_timeMouseClicked(evt);
            }
        });
        getContentPane().add(admit_time, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 320, 120, 40));

        dis_time.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dis_timeMouseClicked(evt);
            }
        });
        getContentPane().add(dis_time, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 420, 120, 40));

        table_recom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CON or EXT", "Intials", "Surname"
            }
        ));
        table_recom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_recomMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_recom);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 40, 320, 380));

        src_recomn.setBackground(new java.awt.Color(102, 102, 255));
        src_recomn.setText("Search Recoomendation");
        src_recomn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                src_recomnActionPerformed(evt);
            }
        });
        getContentPane().add(src_recomn, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 440, 150, 30));

        jLabel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Recommendation ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 1, 14), new java.awt.Color(0, 0, 255))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, 360, 270));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("*");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 40, 30));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 0, 0));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("*");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 320, 40, 30));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 0, 0));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("*");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 370, 40, 30));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 0, 0));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("*");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 270, 40, 30));

        admit_.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Admission", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semilight", 1, 14), new java.awt.Color(0, 0, 255))); // NOI18N
        getContentPane().add(admit_, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 280, 470));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 0, 0));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("*");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 40, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void adm_p_fnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adm_p_fnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adm_p_fnameActionPerformed

    private void adm_p_lnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adm_p_lnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adm_p_lnameActionPerformed

    private void adm_consultant_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adm_consultant_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adm_consultant_idActionPerformed

    private void adm_ext_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adm_ext_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adm_ext_idActionPerformed

    private void adm_mainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adm_mainActionPerformed
        menu mn = new menu();
        mn.setVisible(true);
        close();
    }//GEN-LAST:event_adm_mainActionPerformed

    private void adm_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adm_searchActionPerformed
       
        
        try {
            // TODO add your handling code here:
            DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd");
            //DateFormat mt = new SimpleDateFormat("HH:mm:ss");
            //String date1= "0000-00-00";
            //String time = "00:00:00";

            //String date1 = "0000-00-00";
            int a_id = 0;
            int w_id = 0;
            int aper_id = 0;
            int ap_id = 0;
            String ad_time = null;
            String ad_date = null;
            String dish_time = null;
            String dish_date = null;
            String fname = null;
            String lname = null;
            int con_id = 0;
            int noncon_id = 0;
            int ext_id = 0;

            ResultSet j = query.thequery_search("select * from addmission where a_id='" + adm_id.getText() + "'");


            if (j.next()) {
                a_id = j.getInt("a_id");
                ap_id = j.getInt("Patient_patient_id");

                ad_date = fmt.format(j.getDate("admit_date"));
                ad_time = j.getString("admit_time");
                noncon_id = j.getInt("non_consultant_non_consultant_id");
                ext_id = j.getInt("external_physician_external_phy_id");
                dish_date = fmt.format(j.getDate("discharge_date"));
                dish_time = j.getString("discharge_time");

            }
            ResultSet m = query.thequery_search("select * from patient where patient_id='" + ap_id + "'");

            if (m.next()) {
                aper_id = m.getInt("person_person_id");
            }
            ResultSet k = query.thequery_search("select * from addmission_has_ward where addmission_a_id ='" + a_id + "' ");
            if (k.next()) {
                w_id = k.getInt("ward_ward_id");

            }

            ResultSet n = query.thequery_search("select * from person where person_id ='" + aper_id + "'");
            ResultSet l = query.thequery_search("select * from consultant_has_addmission where addmission_a_id ='" + adm_id.getText() + "'");

            if (n.next()) {
                fname = n.getString("person_fname");
                lname = n.getString("person_lname");

            }
            if (l.next()) {
                con_id = l.getInt("consultant_consultant_id");

            }

            Date date = fmt.parse(ad_date);
            Date date2 = fmt.parse(dish_date);

            adm_patient_id.setText(ap_id + "");
            adm_p_fname.setText(fname);
            adm_p_lname.setText(lname);
            adm_ward_id.setText(w_id + "");
            admit_date.setDate(date);

            dis_date.setDate(date2);
            dis_time.setText(dish_time);

            admit_time.setText(ad_time);
            adm_consultant_id3.setText(con_id + "");
            adm_nonconsultant_id.setText(noncon_id + "");
            adm_ext_id.setText(ext_id + "");

        } catch (Exception ex) {
          JOptionPane.showMessageDialog(rootPane, "Check Whether Admission is Enter !!", "Error", JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_adm_searchActionPerformed

    private void adm_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adm_editActionPerformed

        addmission_mod ad = new addmission_mod();
        ad.ad_id = adm_id.getText();
        ad.admit_date = (java.util.Date) admit_date.getDate();
        ad.discharge_date = (java.util.Date) dis_date.getDate();
        ad.discharge_time = dis_time.getText();
        ad.admit_time = admit_time.getText();
        ad.adm_patient_id = adm_patient_id.getText();
        ad.adm_nonconsultant_id = adm_nonconsultant_id.getText();
        ad.adm_ext_id = adm_ext_id.getText();
        ad.adm_ward_id = adm_ward_id.getText();
        ad.adm_consultant_id3 = adm_consultant_id3.getText();
        ad.update();
        clear();

        /*try {
            DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd");
            String date = fmt.format(this.admit_date.getDate());
            String date1 = fmt.format(this.dis_date.getDate());
            int nondoc = 0;
            int nonemp = 0;
            int nonpr = 0;
            int extpr = 0;
            int con = 0;
            ResultSet l = query.thequery_search("select * from non_consultant where non_consultant_id='" + adm_nonconsultant_id.getText() + "'");
            ResultSet m = query.thequery_search("select * from external_physician where external_phy_id='" + adm_ext_id.getText() + "'");

            if (l.next()) {
                nondoc = l.getInt("doctor_doctor_id");
                nonemp = l.getInt("doctor_employee_emp_id");
                nonpr = l.getInt("doctor_employee_person_person_id");
            }

            if (m.next()) {

                extpr = m.getInt("person_person_id");

            }

            query.thequery("update addmission set admit_date= '" + date + "',admit_time='" + admit_time.getText() + "',discharge_date='" + date1 + "',discharge_time='" + dis_time.getText() + "',non_consultant_non_consultant_id='" + adm_nonconsultant_id.getText() + "',external_physician_external_phy_id='" + adm_ext_id.getText() + "' where a_id ='" + adm_id.getText() + "'");

            query.thequery("update consultant_has_addmission set consultant_consultant_id ='" + adm_consultant_id3.getText() + "'where addmission_a_id='" + adm_id.getText() + "'");
            JOptionPane.showMessageDialog(rootPane, "Admission Updated Sucessfully", "admission update", JOptionPane.INFORMATION_MESSAGE);
            adm_patient_id.setText("");
            adm_p_fname.setText("");
            adm_p_lname.setText("");
            adm_consultant_id.setText("");
            adm_consultant_fname.setText("");
            adm_consultant_lname.setText("");
            adm_ext_id.setText("");
            adm_ext_fname.setText("");
            adm_ext_lname.setText("");
            adm_id.setEditable(true);
            adm_ward_id.setText("");
            admit_date.setCalendar(null);
            dis_date.setCalendar(null);
            admit_time.setText("");
            dis_time.setText("");
            adm_nonconsultant_id.setText("");
            adm_nonconsultant_fname.setText("");
            adm_nonconsultant_lname.setText("");

        } catch (Exception ex) {
            ex.printStackTrace();
        }*/

    }//GEN-LAST:event_adm_editActionPerformed

    private void adm_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adm_deleteActionPerformed
        patient_history v = new patient_history();
        v.setVisible(true);

        DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd");

        try {
            ResultSet p = query.thequery_search("select * from patient where patient_id ='" + adm_patient_id.getText() + "'");

            int a_id = 0;
            int pa_id = 0;
            int per_id = 0;
            String fname = null;
            String lname = null;
            String a_date = null;
            String d_date = null;
            String a_time = null;
            String d_time = null;
            int w_id = 0;
            if (p.next()) {
                pa_id = p.getInt("patient_id");
                per_id = p.getInt("person_person_id");
            }
                ResultSet q = query.thequery_search("select * from person where person_id ='" + per_id + "'");

                if(q.next()){
                    fname = q.getString("person_fname");
                    
                } 
                   
                ResultSet n = query.thequery_search("select * from addmission where Patient_patient_id ='" + adm_patient_id.getText() + "'");

                while (n.next()) {
                     
                    a_id = n.getInt("a_id");
                    a_date = fmt.format(n.getDate("admit_date"));
                    a_time = n.getString("admit_time");
                    d_date = fmt.format(n.getDate("discharge_date"));
                    d_time = n.getString("discharge_time");
                    
                    ResultSet t = query.thequery_search("select * from addmission_has_ward where addmission_a_id ='" + a_id + "'");
                   if(t.next()){
                    w_id = t.getInt("ward_ward_id");
                   }
                    v.table_edit(a_id, Integer.parseInt(adm_patient_id.getText()), fname,w_id, a_date, a_time, d_date, d_time);
                    
                }
            
            
        } catch (Exception ex) {
                      JOptionPane.showMessageDialog(rootPane, "Check Whether Admission is Enter !!", "Error", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_adm_deleteActionPerformed

    private void adm_patient_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adm_patient_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adm_patient_idActionPerformed

    private void adm_submit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adm_submit1ActionPerformed

        addmission_mod ad = new addmission_mod();
        ad.ad_id = adm_id.getText();
        ad.admit_date = (java.util.Date) admit_date.getDate();
        ad.discharge_date = (java.util.Date) dis_date.getDate();
        ad.discharge_time = dis_time.getText();
        ad.admit_time = admit_time.getText();
        ad.adm_patient_id = adm_patient_id.getText();
        ad.adm_nonconsultant_id = adm_nonconsultant_id.getText();
        ad.adm_ext_id = adm_ext_id.getText();
        ad.adm_ward_id = adm_ward_id.getText();
        ad.adm_consultant_id3 = adm_consultant_id3.getText();
        ad.submit();
        clear();
        /*try {
            DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd");
            String date = fmt.format(this.admit_date.getDate());
            String date1 = fmt.format(this.dis_date.getDate());

            int pt_id = 0;
            int per_id = 0;
            int ext_id = 0;
            int ext_per_id = 0;
            int non_con_id = 0;
            int doc_id = 0;
            int emplo_id = 0;
            int emplo_per_id = 0;
            int con_id = 0;
            int con_doc_id = 0;
            int con_emplo_id = 0;
            int con_emplo_per_id = 0;
            int a_id = 0;
            int patient_id = 0;
            int person_id = 0;
            int ad_ext_id = 0;
            int ad_ext_per_id = 0;
            int w_id = 0;
            int index = adm_recommend.getSelectedIndex();

            ResultSet m = query.thequery_search("select patient_id as patient_id from Patient where patient_id='" + adm_patient_id.getText() + "'");
            ResultSet l = query.thequery_search("select non_consultant_id as non_con_id from non_consultant where non_consultant_id='" + adm_nonconsultant_id.getText() + "'");
            ResultSet n = query.thequery_search("select external_phy_id as ext_id from external_physician where external_phy_id='" + adm_ext_id.getText() + "'");
            ResultSet g = query.thequery_search("select ward_id from ward where ward_id='" + adm_ward_id.getText() + "'");

            if (n.next()) {
                ext_id = n.getInt("ext_id");

            }

            if (l.next()) {
                non_con_id = l.getInt("non_con_id");

            }

            if (m.next()) {
                pt_id = m.getInt("patient_id");

            }

            if (g.next()) {
                w_id = g.getInt("ward_id");
            }
            query.thequery("insert into addmission (admit_date,admit_time,discharge_date,discharge_time,non_consultant_non_consultant_id,external_physician_external_phy_id,Patient_patient_id) values('" + date + "','" + admit_time.getText() + "','" + date1 + "','" + dis_time.getText() + "','" + non_con_id + "','" + ext_id + "','" + pt_id + "')");

            ResultSet e = query.thequery_search("select consultant_id as con_id from consultant where consultant_id='" + adm_consultant_id3.getText() + "'");
            ResultSet f = query.thequery_search("select a_id from addmission where a_id='" + adm_id.getText() + "'");

            if (f.next()) {
                a_id = f.getInt("a_id");

            }
            if (e.next()) {
                con_id = e.getInt("con_id");

            }
            query.thequery("insert into consultant_has_addmission (consultant_consultant_id,addmission_a_id) values ('" + con_id + "','" + a_id + "')");
            query.thequery("insert into addmission_has_ward (ward_ward_id,addmission_a_id) values('" + w_id + "','" + a_id + "')");

            JOptionPane.showMessageDialog(rootPane, "Admission Submitted Sucessfully", "admission submit", JOptionPane.INFORMATION_MESSAGE);
            adm_patient_id.setText("");
            adm_p_fname.setText("");
            adm_p_lname.setText("");
            adm_consultant_id.setText("");
            adm_consultant_fname.setText("");
            adm_consultant_lname.setText("");
            adm_ext_id.setText("");
            adm_ext_fname.setText("");
            adm_ext_lname.setText("");
            adm_id.setEditable(true);
            adm_ward_id.setText("");
            admit_date.setCalendar(null);
            dis_date.setCalendar(null);
            admit_time.setText("");
            dis_time.setText("");
            adm_nonconsultant_id.setText("");
            adm_nonconsultant_fname.setText("");
            adm_nonconsultant_lname.setText("");
        } catch (Exception ex) {
            ex.printStackTrace();
        }*/

    }//GEN-LAST:event_adm_submit1ActionPerformed

    private void adm_clrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adm_clrActionPerformed
       clear();

    }//GEN-LAST:event_adm_clrActionPerformed

    private void admit_timeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_admit_timeMouseClicked
        // TODO add your handling code here:
        DateFormat dateFormat = new SimpleDateFormat("HH:mm:ss");
        Calendar cal = Calendar.getInstance();
        admit_time.setText(dateFormat.format(cal.getTime()).toString());
    }//GEN-LAST:event_admit_timeMouseClicked

    private void dis_timeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dis_timeMouseClicked
        // TODO add your handling code here:
        DateFormat dateFormat = new SimpleDateFormat("HH:mm:ss");
        Calendar cal = Calendar.getInstance();
        dis_time.setText(dateFormat.format(cal.getTime()).toString());

    }//GEN-LAST:event_dis_timeMouseClicked

    private void adm_nonconsultant_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adm_nonconsultant_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adm_nonconsultant_idActionPerformed

    private void adm_consultant_id2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adm_consultant_id2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adm_consultant_id2ActionPerformed

    private void adm_consultant_id3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adm_consultant_id3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adm_consultant_id3ActionPerformed

    private void src_recomnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_src_recomnActionPerformed
        addmission_mod ad = new addmission_mod();
        ad.ad_id = adm_id.getText();
        ad.admit_date = (java.util.Date) admit_date.getDate();
        ad.discharge_date = (java.util.Date) dis_date.getDate();
        ad.discharge_time = dis_time.getText();
        ad.admit_time = admit_time.getText();
        ad.adm_patient_id = adm_patient_id.getText();
        ad.adm_nonconsultant_id = adm_nonconsultant_id.getText();
        ad.adm_ext_id = adm_ext_id.getText();
        ad.adm_ward_id = adm_ward_id.getText();
        ad.adm_consultant_id3 = adm_consultant_id3.getText();
        ad.searchall(table_recom);

        /*try {
            // TODO add your handling code here:
            DefaultTableModel model = (DefaultTableModel) table_recom.getModel();

            int non_con_id = 0;
            int con_id = 0;
            int extphy_id = 0;
            int non_conper_id = 0;
            int conper_id = 0;
            int extper_id = 0;
            String noncon_fname = null;
            String noncon_lname = null;
            String con_fname = null;
            String con_lname = null;
            String ext_fname = null;
            String ext_lname = null;

            ResultSet j = query.thequery_search("select * from non_consultant");
            ResultSet k = query.thequery_search("select * from consultant");
            ResultSet l = query.thequery_search("select * from external_physician");

            while (j.next()) {
                non_con_id = j.getInt("non_consultant_id");
                non_conper_id = j.getInt("doctor_employee_person_person_id");
                ResultSet m = query.thequery_search("select * from person where person_id ='" + non_conper_id + "'");
                while (m.next()) {
                    noncon_fname = m.getString("person_fname");
                    noncon_lname = m.getString("person_lname");
                    model.addRow(new Object[]{non_con_id, "N_Con", noncon_fname, noncon_lname});

                }

            }
            while (k.next()) {
                con_id = k.getInt("consultant_id");
                conper_id = k.getInt("doctor_employee_person_person_id");
                ResultSet n = query.thequery_search("select * from person where person_id ='" + conper_id + "'");
                while (n.next()) {
                    con_fname = n.getString("person_fname");
                    con_lname = n.getString("person_lname");
                    model.addRow(new Object[]{con_id, "Con", con_fname, con_lname});

                }

            }
            while (l.next()) {
                extphy_id = l.getInt("external_phy_id");
                extper_id = l.getInt("person_person_id");
                ResultSet q = query.thequery_search("select * from person where person_id ='" + extper_id + "'");
                while (q.next()) {
                    ext_fname = q.getString("person_fname");
                    ext_lname = q.getString("person_lname");
                    model.addRow(new Object[]{extphy_id, "Ext", ext_fname, ext_lname});

                }
            }

        } catch (Exception ex) {
            Logger.getLogger(admission.class.getName()).log(Level.SEVERE, null, ex);
        }*/

    }//GEN-LAST:event_src_recomnActionPerformed

    private void table_recomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_recomMouseClicked
        // TODO add your handling code here:
        int row = table_recom.rowAtPoint(evt.getPoint());
        DefaultTableModel model = (DefaultTableModel) table_recom.getModel();
        int i = table_recom.getSelectedRow();

        if (i >= 0) {
            if (model.getValueAt(i, 1).toString() == "Con") {
                adm_recommend.setSelectedIndex(0);
                adm_consultant_id3.setText(model.getValueAt(i, 0).toString());
                adm_consultant_fname.setText(model.getValueAt(i, 2).toString());
                adm_consultant_lname.setText(model.getValueAt(i, 3).toString());
            }

            if (model.getValueAt(i, 1).toString() == "N_Con") {
                adm_recommend.setSelectedIndex(2);
                adm_nonconsultant_id.setText(model.getValueAt(i, 0).toString());
                adm_nonconsultant_fname.setText(model.getValueAt(i, 2).toString());
                adm_nonconsultant_lname.setText(model.getValueAt(i, 3).toString());
            }
            if (model.getValueAt(i, 1).toString() == "Ext") {
                adm_recommend.setSelectedIndex(1);
                adm_ext_id.setText(model.getValueAt(i, 0).toString());
                adm_ext_fname.setText(model.getValueAt(i, 2).toString());
                adm_ext_lname.setText(model.getValueAt(i, 3).toString());
            }
        }
    }//GEN-LAST:event_table_recomMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new admission().setVisible(true);
            }
        });
    }

    private void close() {
        WindowEvent winclosing = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winclosing);

    }
    private void clear(){
     adm_id.setText("");
        adm_patient_id.setText("");
        adm_p_fname.setText("");
        adm_p_lname.setText("");
        adm_id.setEditable(true);
        adm_consultant_id.setText("");
        adm_consultant_fname.setText("");
        adm_consultant_lname.setText("");
        adm_ext_id.setText("");
        adm_ext_fname.setText("");
        adm_ext_lname.setText("");
        adm_ward_id.setText("");
        admit_date.setCalendar(null);
        dis_date.setCalendar(null);
        admit_time.setText("");
        dis_time.setText("");
        adm_nonconsultant_id.setText("");
        adm_nonconsultant_fname.setText("");
        adm_nonconsultant_lname.setText("");
        adm_consultant_id3.setText("");
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adm_clr;
    private javax.swing.JPanel adm_consult;
    private javax.swing.JTextField adm_consultant_fname;
    private javax.swing.JTextField adm_consultant_id;
    private javax.swing.JTextField adm_consultant_id2;
    private javax.swing.JTextField adm_consultant_id3;
    private javax.swing.JTextField adm_consultant_lname;
    private javax.swing.JButton adm_delete;
    private javax.swing.JButton adm_edit;
    private javax.swing.JPanel adm_ext;
    private javax.swing.JTextField adm_ext_fname;
    private javax.swing.JTextField adm_ext_id;
    private javax.swing.JTextField adm_ext_lname;
    private javax.swing.JTextField adm_id;
    private javax.swing.JButton adm_main;
    private javax.swing.JTextField adm_nonconsultant_fname;
    private javax.swing.JTextField adm_nonconsultant_id;
    private javax.swing.JTextField adm_nonconsultant_lname;
    private javax.swing.JTextField adm_p_fname;
    private javax.swing.JTextField adm_p_lname;
    private javax.swing.JTextField adm_patient_id;
    private javax.swing.JTabbedPane adm_recommend;
    private javax.swing.JButton adm_search;
    private javax.swing.JButton adm_submit1;
    private javax.swing.JTextField adm_ward_id;
    private javax.swing.JLabel admit_;
    private com.toedter.calendar.JDateChooser admit_date;
    private javax.swing.JTextField admit_time;
    private com.toedter.calendar.JDateChooser dis_date;
    private javax.swing.JTextField dis_time;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton src_recomn;
    private javax.swing.JTable table_recom;
    // End of variables declaration//GEN-END:variables
}
