/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.*;

/**
 *
 * @author hima1993
 */
public class Ward extends javax.swing.JFrame {

    /**
     * Creates new form Ward
     */
    public Ward() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        ward_id = new javax.swing.JTextField();
        ward_head = new javax.swing.JTextField();
        ward_name = new javax.swing.JTextField();
        ward_employee = new javax.swing.JTextField();
        ward_main = new javax.swing.JButton();
        ward_patient = new javax.swing.JTextField();
        ward_delete = new javax.swing.JButton();
        ward_submit = new javax.swing.JButton();
        ward_search = new javax.swing.JButton();
        ward_update = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_ward = new javax.swing.JTable();
        ward_search1 = new javax.swing.JButton();
        ward_clear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ward");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel18.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel18.setText("Number of Employee");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 120, 30));

        jLabel19.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel19.setText("Ward ID");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 90, 30));

        jLabel20.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel20.setText("Ward Name");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 90, 30));

        jLabel21.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel21.setText("Number of Patients");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 120, 30));

        jLabel22.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel22.setText("Ward Head");
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 90, 30));

        ward_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ward_idKeyPressed(evt);
            }
        });
        getContentPane().add(ward_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 90, 30));
        getContentPane().add(ward_head, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, 160, 30));
        getContentPane().add(ward_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, 160, 30));

        ward_employee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ward_employeeKeyPressed(evt);
            }
        });
        getContentPane().add(ward_employee, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 90, 30));

        ward_main.setBackground(new java.awt.Color(255, 204, 255));
        ward_main.setFont(new java.awt.Font("Segoe UI Semibold", 0, 10)); // NOI18N
        ward_main.setText("Main Menu");
        ward_main.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ward_mainActionPerformed(evt);
            }
        });
        getContentPane().add(ward_main, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 10, 140, 20));

        ward_patient.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ward_patientKeyPressed(evt);
            }
        });
        getContentPane().add(ward_patient, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 90, 30));

        ward_delete.setBackground(new java.awt.Color(153, 153, 255));
        ward_delete.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        ward_delete.setText("Delete");
        ward_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ward_deleteActionPerformed(evt);
            }
        });
        getContentPane().add(ward_delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 320, 90, 40));

        ward_submit.setBackground(new java.awt.Color(102, 102, 255));
        ward_submit.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        ward_submit.setText("Submit");
        ward_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ward_submitActionPerformed(evt);
            }
        });
        getContentPane().add(ward_submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 90, 40));

        ward_search.setBackground(new java.awt.Color(51, 51, 255));
        ward_search.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        ward_search.setText("Show All ");
        ward_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ward_searchActionPerformed(evt);
            }
        });
        getContentPane().add(ward_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 320, 110, 40));

        ward_update.setBackground(new java.awt.Color(102, 102, 255));
        ward_update.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        ward_update.setText("Update");
        ward_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ward_updateActionPerformed(evt);
            }
        });
        getContentPane().add(ward_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 320, 90, 40));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Wards");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 120, 40));

        table_ward.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ward ID", "Ward Name", "No of Patients", "No of Employee", "Ward Head"
            }
        ));
        table_ward.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_wardMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_ward);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 40, 560, 260));

        ward_search1.setBackground(new java.awt.Color(51, 51, 255));
        ward_search1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        ward_search1.setText("Search");
        ward_search1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ward_search1ActionPerformed(evt);
            }
        });
        getContentPane().add(ward_search1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 320, 90, 40));

        ward_clear.setBackground(new java.awt.Color(204, 204, 255));
        ward_clear.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        ward_clear.setText("Clear");
        ward_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ward_clearActionPerformed(evt);
            }
        });
        getContentPane().add(ward_clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 320, 90, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ward_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ward_deleteActionPerformed
        int p = JOptionPane.showConfirmDialog(rootPane, "Are You Sure You want To Delete This?", "ward delete", JOptionPane.YES_NO_OPTION);

        // i = the index of the selected row
        if (p == JOptionPane.YES_OPTION) {

            ward_mod wr = new ward_mod();
            wr.ward_id = ward_id.getText();
            wr.ward_name = ward_name.getText();
            wr.number_of_patients = ward_patient.getText();
            wr.number_of_employee = ward_employee.getText();
            wr.ward_head = ward_head.getText();
            wr.delete(table_ward);

        }

        /*try {

            int p = JOptionPane.showConfirmDialog(rootPane, "Are You Sure You want To Delete This?", "ward delete", JOptionPane.YES_NO_OPTION);

            // i = the index of the selected row
            if (p == JOptionPane.YES_OPTION) {
                query.thequery("update addmission_has_ward set ward_ward_id=null where ward_ward_id='" + ward_id.getText() + "'");
                query.thequery("update employee set ward_ward_id=null where ward_ward_id='" + ward_id.getText() + "'");
                query.thequery("delete from ward where ward_id='" + ward_id.getText() + "'");
                DefaultTableModel model = (DefaultTableModel) table_ward.getModel();
                int i = table_ward.getSelectedRow();
                if (i >= 0) {
                    // remove a row from jtable
                    model.removeRow(i);
                } else {
                    System.out.println("Delete Error");
                }
                ward_id.setText("");
                ward_name.setText("");
                ward_patient.setText("");
                ward_head.setText("");
                ward_employee.setText("");
            }
        } catch (Exception ex) {
            Logger.getLogger(Ward.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_ward_deleteActionPerformed

    private void ward_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ward_submitActionPerformed

        ward_mod wr = new ward_mod();
        wr.ward_id = ward_id.getText();
        wr.ward_name = ward_name.getText();
        wr.number_of_patients = ward_patient.getText();
        wr.number_of_employee = ward_employee.getText();
        wr.ward_head = ward_head.getText();
        wr.add(table_ward);
        clear();

        /* try {
            query.thequery("insert into ward (ward_id,ward_name,number_of_patients,number_of_employee,ward_head) values('"+ward_id.getText()+"','"+ward_name.getText()+"','"+ward_patient.getText()+"','"+ward_employee.getText()+"','"+ward_head.getText()+"')");
            DefaultTableModel model = (DefaultTableModel) table_ward.getModel();
            model.addRow(new Object[]{ward_id.getText(), ward_name.getText(), ward_patient.getText(), ward_employee.getText(),ward_head.getText()});
            ward_id.setText("");
            ward_name.setText("");
            ward_patient.setText("");
            ward_head.setText("");
            ward_employee.setText("");
            ward_id.setEditable(true);
        } catch (Exception ex) {
            ex.printStackTrace();
        }*/

    }//GEN-LAST:event_ward_submitActionPerformed

    private void ward_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ward_searchActionPerformed
        
        ward_mod wr = new ward_mod();
        wr.ward_id = ward_id.getText();
        wr.ward_name = ward_name.getText();
        wr.number_of_patients = ward_patient.getText();
        wr.number_of_employee = ward_employee.getText();
        wr.ward_head = ward_head.getText();
        wr.showall(table_ward);
        clear();
        
        /*try {
            // TODO add your handling code here:
            int wd_id;
            String wd_name;
            String wd_head;
            int num_pat;
            int num_emp;

            ResultSet d = query.thequery_search("select ward_id as w_id,ward_name as w_name,number_of_patients as num_patient,number_of_employee as num_employee,ward_head as w_head from ward");
            DefaultTableModel model = (DefaultTableModel) table_ward.getModel();
            while (d.next()) {
                wd_id = d.getInt("w_id");
                wd_name = d.getString("w_name");
                wd_head = d.getString("w_head");
                num_pat = d.getInt("num_patient");
                num_emp = d.getInt("num_employee");
                model.addRow(new Object[]{wd_id, wd_name, num_pat, num_emp, wd_head});
            }
        } catch (Exception ex) {
            Logger.getLogger(Ward.class.getName()).log(Level.SEVERE, null, ex);
        }*/


    }//GEN-LAST:event_ward_searchActionPerformed

    private void ward_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ward_updateActionPerformed
        // TODO add your handling code here:
        
        ward_mod wr = new ward_mod();
        wr.ward_id = ward_id.getText();
        wr.ward_name = ward_name.getText();
        wr.number_of_patients = ward_patient.getText();
        wr.number_of_employee = ward_employee.getText();
        wr.ward_head = ward_head.getText();
        wr.update(table_ward);
        clear();
        /*try {
            query.thequery("update ward set ward_name='" + ward_name.getText() + "',number_of_patients='" + ward_patient.getText() + "',number_of_employee='" + ward_employee.getText() + "',ward_head='" + ward_head.getText() + "' where ward_id ='" + ward_id.getText() + "'");

            JOptionPane.showMessageDialog(rootPane, "Ward Updated Sucessfully", "Ward update", JOptionPane.INFORMATION_MESSAGE);

            DefaultTableModel model = (DefaultTableModel) table_ward.getModel();
            int i = table_ward.getSelectedRow();

            if (i >= 0) {
                model.setValueAt(ward_id.getText(), i, 0);
                model.setValueAt(ward_name.getText(), i, 1);
                model.setValueAt(ward_patient.getText(), i, 2);
                model.setValueAt(ward_head.getText(), i, 3);
                model.setValueAt(ward_employee.getText(), i, 4);
            } else {
                System.out.println("Update Error");
            }
            ward_id.setText("");
            ward_name.setText("");
            ward_patient.setText("");
            ward_head.setText("");
            ward_employee.setText("");

        } catch (Exception ex) {
            ex.printStackTrace();
        }*/

    }//GEN-LAST:event_ward_updateActionPerformed

    private void ward_mainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ward_mainActionPerformed
        menu mn = new menu();
        mn.setVisible(true);
        close();
    }//GEN-LAST:event_ward_mainActionPerformed

    private void ward_search1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ward_search1ActionPerformed
        ward_mod wr = new ward_mod();
        wr.ward_id = ward_id.getText();
        wr.ward_name = ward_name.getText();
        wr.number_of_patients = ward_patient.getText();
        wr.number_of_employee = ward_employee.getText();
        wr.ward_head = ward_head.getText();
        wr.search(table_ward);
        clear();
        
        
        /*try {
            // TODO add your handling code here:
            int w_id = 0;
            String w_name = null;
            int number_of_patients = 0;
            int number_of_employee = 0;
            String ward_head = null;
            ResultSet l = query.thequery_search("select * from ward where ward_id = '"+ward_id.getText()+"' or ward_name = '"+ward_name.getText()+"'");
            if(l.next()){
              w_id = l.getInt("ward_id");  
              w_name = l.getString("ward_name");
              number_of_patients = l.getInt("number_of_patients");
              number_of_employee = l.getInt("number_of_employee");
              ward_head= l.getString("ward_head");
                
                
            }
            DefaultTableModel model = (DefaultTableModel) table_ward.getModel();
            model.addRow(new Object[]{w_id, w_name, number_of_patients, number_of_employee,ward_head});
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Ward.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(Ward.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_ward_search1ActionPerformed

    private void ward_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ward_clearActionPerformed
        // TODO add your handling code here:
        clear();
        DefaultTableModel model = (DefaultTableModel) table_ward.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_ward_clearActionPerformed

    private void ward_idKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ward_idKeyPressed
        // TODO add your handling code here:
        int key = evt.getExtendedKeyCode();
        if (key >= evt.VK_0 && key <= evt.VK_9 || key == KeyEvent.VK_BACK_SPACE || key == KeyEvent.VK_DELETE || key >= evt.VK_A && key <= evt.VK_Z) {
            ward_id.setEditable(true);

        } else {
            ward_id.setEditable(false);

        }
    }//GEN-LAST:event_ward_idKeyPressed

    private void ward_patientKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ward_patientKeyPressed
        // TODO add your handling code here:
        int key = evt.getExtendedKeyCode();
        if (key >= evt.VK_0 && key <= evt.VK_9 || key == KeyEvent.VK_BACK_SPACE || key == KeyEvent.VK_DELETE) {
            ward_patient.setEditable(true);

        } else {
            ward_patient.setEditable(false);

        }
    }//GEN-LAST:event_ward_patientKeyPressed

    private void ward_employeeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ward_employeeKeyPressed
        // TODO add your handling code here:
        int key = evt.getExtendedKeyCode();
        if (key >= evt.VK_0 && key <= evt.VK_9 || key == KeyEvent.VK_BACK_SPACE || key == KeyEvent.VK_DELETE) {
            ward_employee.setEditable(true);

        } else {
            ward_employee.setEditable(false);

        }
    }//GEN-LAST:event_ward_employeeKeyPressed

    private void table_wardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_wardMouseClicked
        // TODO add your handling code here:
        int row = table_ward.rowAtPoint(evt.getPoint());
        DefaultTableModel model = (DefaultTableModel) table_ward.getModel();
        int i = table_ward.getSelectedRow();

        if (i >= 0) {
            ward_id.setText(model.getValueAt(i, 0).toString());
            ward_name.setText(model.getValueAt(i, 1).toString());
            ward_patient.setText(model.getValueAt(i, 2).toString());
            ward_head.setText(model.getValueAt(i, 4).toString());
            ward_employee.setText(model.getValueAt(i, 3).toString());

        }
    }//GEN-LAST:event_table_wardMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ward.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ward.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ward.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ward.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Ward().setVisible(true);
        });
    }

    private void close() {
        WindowEvent winclosing = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winclosing);

    }

    private void clear() {
        ward_id.setText("");
        ward_name.setText("");
        ward_patient.setText("");
        ward_head.setText("");
        ward_employee.setText("");
        ward_id.setEditable(true);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_ward;
    private javax.swing.JButton ward_clear;
    private javax.swing.JButton ward_delete;
    private javax.swing.JTextField ward_employee;
    private javax.swing.JTextField ward_head;
    private javax.swing.JTextField ward_id;
    private javax.swing.JButton ward_main;
    private javax.swing.JTextField ward_name;
    private javax.swing.JTextField ward_patient;
    private javax.swing.JButton ward_search;
    private javax.swing.JButton ward_search1;
    private javax.swing.JButton ward_submit;
    private javax.swing.JButton ward_update;
    // End of variables declaration//GEN-END:variables
}
